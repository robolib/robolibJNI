/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_github_robolib_jni_NetworkCommunications */

#ifndef _Included_io_github_robolib_jni_NetworkCommunications
#define _Included_io_github_robolib_jni_NetworkCommunications
#ifdef __cplusplus
extern "C" {
#endif
#undef io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_DSEnhancedIO_Input
#define io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_DSEnhancedIO_Input 17L
#undef io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Vertices1
#define io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Vertices1 21L
#undef io_github_robolib_jni_NetworkCommunications_SYS_STATUS_DATA_SIZE
#define io_github_robolib_jni_NetworkCommunications_SYS_STATUS_DATA_SIZE 44L
#undef io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Custom
#define io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Custom 25L
#undef io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Vertices2
#define io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Vertices2 23L
#undef io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Header
#define io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Header 19L
#undef io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Joystick
#define io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Joystick 24L
#undef io_github_robolib_jni_NetworkCommunications_IO_CONFIG_DATA_SIZE
#define io_github_robolib_jni_NetworkCommunications_IO_CONFIG_DATA_SIZE 32L
#undef io_github_robolib_jni_NetworkCommunications_kMaxModuleNumber
#define io_github_robolib_jni_NetworkCommunications_kMaxModuleNumber 2L
#undef io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_DSEnhancedIO_Output
#define io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_DSEnhancedIO_Output 18L
#undef io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Extra2
#define io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Extra2 22L
#undef io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Extra1
#define io_github_robolib_jni_NetworkCommunications_kFRC_NetworkCommunication_DynamicType_Kinect_Extra1 20L
#undef io_github_robolib_jni_NetworkCommunications_USER_DS_LCD_DATA_SIZE
#define io_github_robolib_jni_NetworkCommunications_USER_DS_LCD_DATA_SIZE 128L
#undef io_github_robolib_jni_NetworkCommunications_kUsageReporting_version
#define io_github_robolib_jni_NetworkCommunications_kUsageReporting_version 1L
#undef io_github_robolib_jni_NetworkCommunications_USER_STATUS_DATA_SIZE
#define io_github_robolib_jni_NetworkCommunications_USER_STATUS_DATA_SIZE 908L
/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    AICalibrationGetLSBWeight
 * Signature: (IILjava/lang/Integer;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_AICalibrationGetLSBWeight
  (JNIEnv *, jclass, jint, jint, jobject);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    AICalibrationGetOffset
 * Signature: (IILjava/lang/Integer;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_AICalibrationGetOffset
  (JNIEnv *, jclass, jint, jint, jobject);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    getTargetClass
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_getTargetClass
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    LoadOutGetModulePresence
 * Signature: (IB)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_LoadOutGetModulePresence
  (JNIEnv *, jclass, jint, jbyte);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    LoadOutGetTargetClass
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_LoadOutGetTargetClass
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    report
 * Signature: (IBBLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_report
  (JNIEnv *, jclass, jint, jbyte, jbyte, jstring);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    getFPGAHardwareVersion
 * Signature: (Ljava/nio/ShortBuffer;Ljava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_getFPGAHardwareVersion
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    setErrorData
 * Signature: (Ljava/lang/String;II)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_setErrorData
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    overrideIOConfig
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_overrideIOConfig
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    setNewDataSem
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_setNewDataSem
  (JNIEnv *, jclass, jobject);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    signalResyncActionDone
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_signalResyncActionDone
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    setNewDataOccurRef
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_setNewDataOccurRef
  (JNIEnv *, jclass, jint);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    setResyncOccurRef
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_setResyncOccurRef
  (JNIEnv *, jclass, jint);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    GetVersionString
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_GetVersionString
  (JNIEnv *, jclass, jobject);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    ObserveUserProgramStarting
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_ObserveUserProgramStarting
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    ObserveUserProgramDisabled
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_ObserveUserProgramDisabled
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    ObserveUserProgramAutonomous
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_ObserveUserProgramAutonomous
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    ObserveUserProgramTeleop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_ObserveUserProgramTeleop
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    ObserveUserProgramTest
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_ObserveUserProgramTest
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    NetworkCommunicationReserve
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_NetworkCommunications_NetworkCommunicationReserve
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    HALGetRobotStatus
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_HALGetRobotStatus
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    HALGetAllianceStation
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_HALGetAllianceStation
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    HALGetJoystickAxes
 * Signature: (B)[S
 */
JNIEXPORT jshortArray JNICALL Java_io_github_robolib_jni_NetworkCommunications_HALGetJoystickAxes
  (JNIEnv *, jclass, jbyte);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    HALGetJoystickPOVs
 * Signature: (B)[S
 */
JNIEXPORT jshortArray JNICALL Java_io_github_robolib_jni_NetworkCommunications_HALGetJoystickPOVs
  (JNIEnv *, jclass, jbyte);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    HALGetJoystickButtons
 * Signature: (BLjava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_HALGetJoystickButtons
  (JNIEnv *, jclass, jbyte, jobject);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    HALSetJoystickOutputs
 * Signature: (BISS)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_HALSetJoystickOutputs
  (JNIEnv *, jclass, jbyte, jint, jshort, jshort);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    HALGetMatchTime
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_io_github_robolib_jni_NetworkCommunications_HALGetMatchTime
  (JNIEnv *, jclass);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    HALGetSystemActive
 * Signature: (Ljava/nio/IntBuffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_io_github_robolib_jni_NetworkCommunications_HALGetSystemActive
  (JNIEnv *, jclass, jobject);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    HALGetBrownedOut
 * Signature: (Ljava/nio/IntBuffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_io_github_robolib_jni_NetworkCommunications_HALGetBrownedOut
  (JNIEnv *, jclass, jobject);

/*
 * Class:     io_github_robolib_jni_NetworkCommunications
 * Method:    HALSetErrorData
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_NetworkCommunications_HALSetErrorData
  (JNIEnv *, jclass, jstring);

#ifdef __cplusplus
}
#endif
#endif
