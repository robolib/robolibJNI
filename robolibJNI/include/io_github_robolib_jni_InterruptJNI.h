/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_github_robolib_jni_InterruptJNI */

#ifndef _Included_io_github_robolib_jni_InterruptJNI
#define _Included_io_github_robolib_jni_InterruptJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_github_robolib_jni_InterruptJNI
 * Method:    initializeInterruptJVM
 * Signature: (Ljava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_InterruptJNI_initializeInterruptJVM
  (JNIEnv *, jclass, jobject);

/*
 * Class:     io_github_robolib_jni_InterruptJNI
 * Method:    initializeInterrupts
 * Signature: (IBLjava/nio/IntBuffer;)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_io_github_robolib_jni_InterruptJNI_initializeInterrupts
  (JNIEnv *, jclass, jint, jbyte, jobject);

/*
 * Class:     io_github_robolib_jni_InterruptJNI
 * Method:    cleanInterrupts
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_InterruptJNI_cleanInterrupts
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_InterruptJNI
 * Method:    waitForInterrupt
 * Signature: (Ljava/nio/ByteBuffer;DZLjava/nio/IntBuffer;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_InterruptJNI_waitForInterrupt
  (JNIEnv *, jclass, jobject, jdouble, jboolean, jobject);

/*
 * Class:     io_github_robolib_jni_InterruptJNI
 * Method:    enableInterrupts
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_InterruptJNI_enableInterrupts
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_InterruptJNI
 * Method:    disableInterrupts
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_InterruptJNI_disableInterrupts
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_InterruptJNI
 * Method:    readRisingTimestamp
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)D
 */
JNIEXPORT jdouble JNICALL Java_io_github_robolib_jni_InterruptJNI_readRisingTimestamp
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_InterruptJNI
 * Method:    readFallingTimestamp
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)D
 */
JNIEXPORT jdouble JNICALL Java_io_github_robolib_jni_InterruptJNI_readFallingTimestamp
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_InterruptJNI
 * Method:    requestInterrupts
 * Signature: (Ljava/nio/ByteBuffer;BIBLjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_InterruptJNI_requestInterrupts
  (JNIEnv *, jclass, jobject, jbyte, jint, jbyte, jobject);

/*
 * Class:     io_github_robolib_jni_InterruptJNI
 * Method:    attachInterruptHandler
 * Signature: (Ljava/nio/ByteBuffer;Lio/github/robolib/hal/InterruptJNI/InterruptJNIHandlerFunction;Ljava/lang/Object;Ljava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_InterruptJNI_attachInterruptHandler
  (JNIEnv *, jclass, jobject, jobject, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_InterruptJNI
 * Method:    setInterruptUpSourceEdge
 * Signature: (Ljava/nio/ByteBuffer;BBLjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_InterruptJNI_setInterruptUpSourceEdge
  (JNIEnv *, jclass, jobject, jbyte, jbyte, jobject);

#ifdef __cplusplus
}
#endif
#endif
