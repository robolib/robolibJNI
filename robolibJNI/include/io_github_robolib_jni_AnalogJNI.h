/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_github_robolib_jni_AnalogJNI */

#ifndef _Included_io_github_robolib_jni_AnalogJNI
#define _Included_io_github_robolib_jni_AnalogJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    initializeAnalogInputPort
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_io_github_robolib_jni_AnalogJNI_initializeAnalogInputPort
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    initializeAnalogOutputPort
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_io_github_robolib_jni_AnalogJNI_initializeAnalogOutputPort
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    checkAnalogModule
 * Signature: (B)B
 */
JNIEXPORT jbyte JNICALL Java_io_github_robolib_jni_AnalogJNI_checkAnalogModule
  (JNIEnv *, jclass, jbyte);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    checkAnalogInputChannel
 * Signature: (I)B
 */
JNIEXPORT jbyte JNICALL Java_io_github_robolib_jni_AnalogJNI_checkAnalogInputChannel
  (JNIEnv *, jclass, jint);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    checkAnalogOutputChannel
 * Signature: (I)B
 */
JNIEXPORT jbyte JNICALL Java_io_github_robolib_jni_AnalogJNI_checkAnalogOutputChannel
  (JNIEnv *, jclass, jint);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    setAnalogOutput
 * Signature: (Ljava/nio/ByteBuffer;DLjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_setAnalogOutput
  (JNIEnv *, jclass, jobject, jdouble, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogOutput
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)D
 */
JNIEXPORT jdouble JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogOutput
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    setAnalogSampleRate
 * Signature: (DLjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_setAnalogSampleRate
  (JNIEnv *, jclass, jdouble, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogSampleRate
 * Signature: (Ljava/nio/IntBuffer;)D
 */
JNIEXPORT jdouble JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogSampleRate
  (JNIEnv *, jclass, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    setAnalogAverageBits
 * Signature: (Ljava/nio/ByteBuffer;ILjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_setAnalogAverageBits
  (JNIEnv *, jclass, jobject, jint, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogAverageBits
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogAverageBits
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    setAnalogOversampleBits
 * Signature: (Ljava/nio/ByteBuffer;ILjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_setAnalogOversampleBits
  (JNIEnv *, jclass, jobject, jint, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogOversampleBits
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogOversampleBits
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogValue
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)S
 */
JNIEXPORT jshort JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogValue
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogAverageValue
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogAverageValue
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogVoltsToValue
 * Signature: (Ljava/nio/ByteBuffer;DLjava/nio/IntBuffer;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogVoltsToValue
  (JNIEnv *, jclass, jobject, jdouble, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogVoltage
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)D
 */
JNIEXPORT jdouble JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogVoltage
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogAverageVoltage
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)D
 */
JNIEXPORT jdouble JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogAverageVoltage
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogLSBWeight
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogLSBWeight
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogOffset
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogOffset
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    isAccumulatorChannel
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)B
 */
JNIEXPORT jbyte JNICALL Java_io_github_robolib_jni_AnalogJNI_isAccumulatorChannel
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    initAccumulator
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_initAccumulator
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    resetAccumulator
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_resetAccumulator
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    setAccumulatorCenter
 * Signature: (Ljava/nio/ByteBuffer;ILjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_setAccumulatorCenter
  (JNIEnv *, jclass, jobject, jint, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    setAccumulatorDeadband
 * Signature: (Ljava/nio/ByteBuffer;ILjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_setAccumulatorDeadband
  (JNIEnv *, jclass, jobject, jint, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAccumulatorValue
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)J
 */
JNIEXPORT jlong JNICALL Java_io_github_robolib_jni_AnalogJNI_getAccumulatorValue
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAccumulatorCount
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)I
 */
JNIEXPORT jint JNICALL Java_io_github_robolib_jni_AnalogJNI_getAccumulatorCount
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAccumulatorOutput
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/LongBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_getAccumulatorOutput
  (JNIEnv *, jclass, jobject, jobject, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    initializeAnalogTrigger
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_io_github_robolib_jni_AnalogJNI_initializeAnalogTrigger
  (JNIEnv *, jclass, jobject, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    cleanAnalogTrigger
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_cleanAnalogTrigger
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    setAnalogTriggerLimitsRaw
 * Signature: (Ljava/nio/ByteBuffer;IILjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_setAnalogTriggerLimitsRaw
  (JNIEnv *, jclass, jobject, jint, jint, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    setAnalogTriggerLimitsVoltage
 * Signature: (Ljava/nio/ByteBuffer;DDLjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_setAnalogTriggerLimitsVoltage
  (JNIEnv *, jclass, jobject, jdouble, jdouble, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    setAnalogTriggerAveraged
 * Signature: (Ljava/nio/ByteBuffer;BLjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_setAnalogTriggerAveraged
  (JNIEnv *, jclass, jobject, jbyte, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    setAnalogTriggerFiltered
 * Signature: (Ljava/nio/ByteBuffer;BLjava/nio/IntBuffer;)V
 */
JNIEXPORT void JNICALL Java_io_github_robolib_jni_AnalogJNI_setAnalogTriggerFiltered
  (JNIEnv *, jclass, jobject, jbyte, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogTriggerInWindow
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)B
 */
JNIEXPORT jbyte JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogTriggerInWindow
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogTriggerTriggerState
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/IntBuffer;)B
 */
JNIEXPORT jbyte JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogTriggerTriggerState
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     io_github_robolib_jni_AnalogJNI
 * Method:    getAnalogTriggerOutput
 * Signature: (Ljava/nio/ByteBuffer;ILjava/nio/IntBuffer;)B
 */
JNIEXPORT jbyte JNICALL Java_io_github_robolib_jni_AnalogJNI_getAnalogTriggerOutput
  (JNIEnv *, jclass, jobject, jint, jobject);

#ifdef __cplusplus
}
#endif
#endif
